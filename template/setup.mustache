##################################################
# Auto-generated setup for the '{{testName}}' portion
# of the FrameworkBenchmark project
#
# Generated with the FrameworkBenchmarks-setup-builder
# (http://kpacha.github.io/FrameworkBenchmarks-setup-builder/)
#
# Generated at {{date}}
# 
# see https://github.com/TechEmpower/FrameworkBenchmarks#setup-files
##################################################
 
import subprocess
import sys
import setup_util
 
##################################################
# start(args, logfile, errfile)
#
# Starts the server
# returns 0 if everything completes, 1 otherwise
##################################################
def start(args, logfile, errfile):
{{#replacementCmd}}
# setting the database url
setup_util.replace_text("{{replacementCmd}}", "mysql:\/\/.*:3306", "mysql://" + args.database_host + ":3306")
{{/replacementCmd}}
  try:
{{#start}}
    {{#startCall}}
    subprocess.{{startCall}}("{{startArgument}}", shell=True, {{#startCwd}} cwd="{{startCwd}}", {{/startCwd}} stderr=errfile, stdout=logfile)
    {{/startCall}}
{{/start}}
    return 0
  except subprocess.CalledProcessError:
    return 1
 
##################################################
# stop(logfile, errfile)
#
# Stops the server
# returns 0 if everything completes, 1 otherwise
##################################################
def stop(logfile, errfile):
  try:
    p = subprocess.Popen(['ps', 'aux'], stdout=subprocess.PIPE, stderr=errfile, stdout=logfile)
    out, err = p.communicate()
    for line in out.splitlines():
      if '{{processName}}' in line:
        pid = int(line.split(None, 2)[1])
        os.kill(pid, 9)
    return 0
  except subprocess.CalledProcessError:
    return 1